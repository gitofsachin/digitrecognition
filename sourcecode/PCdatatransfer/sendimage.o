clear all;
close all;

pkg load instrument-control
pkg load image

warning('off','all'); %Suppress GraphicsMagick low resolution warning

arglist=argv();
imageno=str2num(arglist{1});

% Load validation set.
	inputValues = loadMNISTImages('../../database/MNIST/t10k-images.idx3-ubyte');
	labels = loadMNISTLabels('../../database/MNIST/t10k-labels.idx1-ubyte');

if(imageno>0)
	inputVector = inputValues(:, imageno);
	labels(imageno);
else
	inputVector = imread("sample.jpg");
	inputVector = imresize(inputVector,[20 20]);
	rsum=0;
	csum=0;
	for i=1:1:20
		for j=1:1:20
			rsum+=i*double(255-inputVector(i,j));
			csum+=j*double(255-inputVector(i,j));
		end
	end
	rsum=double(rsum/sum(sum(255-inputVector)));
	csum=double(csum/sum(sum(255-inputVector)));

	if(mean(mean(inputVector))>128)
		inputVector=255-inputVector;
	end

	rsum=round(rsum);
	csum=round(csum);
	temp=zeros(28,28);
	xstart=5+10-rsum;
	ystart=5+10-csum;

	if(xstart<1)
		xstart=1;
	end
	if(xstart>9)
		xstart=9;
	end
	if(ystart<1)
		ystart=1;
	end
	if(ystart>9)
		ystart=9;
	end

	temp(xstart:xstart+20-1,ystart:ystart+20-1)=inputVector;
	inputVector=temp;
	h=ones(2,2);
	h=h/4;
	inputVector=imfilter(inputVector,h);

	inputVector = reshape(inputVector,784,1);
	inputVector = double(inputVector)/255;
end

myim=reshape(inputVector,28,28);
imshow(myim);
pause(1)

s1 = serial("/dev/ttyACM0", 115200);
set(s1, "baudrate", 115200);
set(s1, "bytesize", 8)
set(s1, "parity", "N")
set(s1, "stopbits", 1)

d=myim.*255;
a=d';
x=a;
srl_write(s1,'s');
for i=1:size(x,1)
	for j=1:size(x,2)
		p=uint8(x(i,j));
		srl_write(s1,p);
	end
end
